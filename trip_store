ruleset trip_store {
  meta {
    shares __testing
  }
  global {
    __testing = { "queries": [ { "name": "__testing" } ],
                  "events": [ {"domain": "car", "type": "trip_reset"}] }
  }

  rule collect_trips {
    select when explicit trip_processed
    pre{
      temp = {"mileage": event:attr("mileage"), "time": time:now() }
    }
    fired{
      ent:trips:= ent:trips.defaultsTo([]).union([temp])
    }
  }

  rule collect_long_trips {
    select when explicit found_long_trip
    pre{
      temp = {"mileage": event:attr("mileage"), "time": time:now() }
    }
    fired{
      ent:long_trips:= ent:long_trips.defaultsTo([]).union([temp])
    }
  }

  rule clear_trips {
    select when car trip_reset
    always{
      ent:trips:=[];
      ent:long_trips:=[]
    }
  }
}
